
;; Function main (main, funcdef_no=6, decl_uid=8740, cgraph_uid=7, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 14 count 12 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 11 7 8 9 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 11 6 5
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 8 }
;; 5 succs { 11 6 }
;; 6 succs { 7 }
;; 11 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 116.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 147.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r128,l0) best DREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r124,l0) best SIREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r121,l0) best DIREG, allocno GENERAL_REGS
    r120: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r120,l0) best DREG, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r113,l0) best SIREG, allocno GENERAL_REGS
    r112: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r112,l0) best DREG, allocno GENERAL_REGS
    r111: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r111,l0) best CREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a47 (r96,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r95: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r95,l0) best AD_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r86,l0) best CREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:412000 MEM:7000
  a2(r133,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a3(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r121,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a20(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a21(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a22(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a24(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a25(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a26(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a27(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a28(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a29(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a30(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a31(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a32(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a33(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a34(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a35(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a36(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a37(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a38(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a39(r91,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:1000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a40(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a41(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a42(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a43(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a44(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a45(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a46(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a47(r96,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:37000 MEM:7000
  a48(r95,l0) costs: AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:39000 NO_REX_SSE_REGS:39000 SSE_REGS:39000 INT_SSE_REGS:64000 MEM:17000
  a49(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:1000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a50(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a51(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000

   Insn 164(l0): point = 0
   Insn 163(l0): point = 2
   Insn 159(l0): point = 4
   Insn 154(l0): point = 7
   Insn 125(l0): point = 10
   Insn 124(l0): point = 12
   Insn 123(l0): point = 14
   Insn 122(l0): point = 16
   Insn 121(l0): point = 18
   Insn 120(l0): point = 20
   Insn 152(l0): point = 23
   Insn 151(l0): point = 25
   Insn 149(l0): point = 27
   Insn 148(l0): point = 29
   Insn 147(l0): point = 31
   Insn 146(l0): point = 33
   Insn 145(l0): point = 35
   Insn 142(l0): point = 38
   Insn 141(l0): point = 40
   Insn 140(l0): point = 42
   Insn 174(l0): point = 45
   Insn 170(l0): point = 48
   Insn 133(l0): point = 50
   Insn 132(l0): point = 52
   Insn 131(l0): point = 54
   Insn 130(l0): point = 56
   Insn 129(l0): point = 58
   Insn 128(l0): point = 60
   Insn 127(l0): point = 62
   Insn 168(l0): point = 65
   Insn 116(l0): point = 67
   Insn 115(l0): point = 69
   Insn 114(l0): point = 71
   Insn 113(l0): point = 73
   Insn 112(l0): point = 75
   Insn 111(l0): point = 77
   Insn 110(l0): point = 79
   Insn 109(l0): point = 81
   Insn 108(l0): point = 83
   Insn 107(l0): point = 85
   Insn 106(l0): point = 87
   Insn 105(l0): point = 89
   Insn 104(l0): point = 91
   Insn 103(l0): point = 93
   Insn 102(l0): point = 95
   Insn 101(l0): point = 97
   Insn 100(l0): point = 99
   Insn 99(l0): point = 101
   Insn 98(l0): point = 103
   Insn 97(l0): point = 105
   Insn 96(l0): point = 107
   Insn 95(l0): point = 109
   Insn 94(l0): point = 111
   Insn 93(l0): point = 113
   Insn 92(l0): point = 115
   Insn 91(l0): point = 117
   Insn 90(l0): point = 119
   Insn 89(l0): point = 121
   Insn 88(l0): point = 123
   Insn 87(l0): point = 125
   Insn 86(l0): point = 127
   Insn 85(l0): point = 129
   Insn 84(l0): point = 131
   Insn 83(l0): point = 133
   Insn 82(l0): point = 135
   Insn 81(l0): point = 137
   Insn 80(l0): point = 139
   Insn 79(l0): point = 141
   Insn 78(l0): point = 143
   Insn 77(l0): point = 145
   Insn 76(l0): point = 147
   Insn 75(l0): point = 149
   Insn 74(l0): point = 151
   Insn 73(l0): point = 153
   Insn 72(l0): point = 155
   Insn 71(l0): point = 157
   Insn 70(l0): point = 159
   Insn 69(l0): point = 161
   Insn 68(l0): point = 163
   Insn 67(l0): point = 165
   Insn 66(l0): point = 167
   Insn 65(l0): point = 169
   Insn 64(l0): point = 171
   Insn 63(l0): point = 173
   Insn 62(l0): point = 175
   Insn 61(l0): point = 177
   Insn 60(l0): point = 179
   Insn 59(l0): point = 181
   Insn 58(l0): point = 183
   Insn 57(l0): point = 185
   Insn 56(l0): point = 187
   Insn 55(l0): point = 189
   Insn 54(l0): point = 191
   Insn 53(l0): point = 193
   Insn 52(l0): point = 195
   Insn 51(l0): point = 197
   Insn 166(l0): point = 200
   Insn 46(l0): point = 202
   Insn 44(l0): point = 205
   Insn 43(l0): point = 207
   Insn 42(l0): point = 209
   Insn 41(l0): point = 211
   Insn 40(l0): point = 213
   Insn 39(l0): point = 215
   Insn 38(l0): point = 217
   Insn 37(l0): point = 219
   Insn 36(l0): point = 221
   Insn 35(l0): point = 223
   Insn 34(l0): point = 225
   Insn 33(l0): point = 227
   Insn 32(l0): point = 229
   Insn 31(l0): point = 231
   Insn 30(l0): point = 233
   Insn 29(l0): point = 235
   Insn 28(l0): point = 237
   Insn 27(l0): point = 239
   Insn 26(l0): point = 241
   Insn 25(l0): point = 243
   Insn 24(l0): point = 245
   Insn 23(l0): point = 247
   Insn 22(l0): point = 249
   Insn 21(l0): point = 251
   Insn 20(l0): point = 253
   Insn 19(l0): point = 255
   Insn 18(l0): point = 257
   Insn 17(l0): point = 259
   Insn 16(l0): point = 261
   Insn 15(l0): point = 263
   Insn 14(l0): point = 265
   Insn 13(l0): point = 267
   Insn 12(l0): point = 269
   Insn 11(l0): point = 271
   Insn 10(l0): point = 273
   Insn 9(l0): point = 275
   Insn 8(l0): point = 277
   Insn 7(l0): point = 279
   Insn 6(l0): point = 281
   Insn 5(l0): point = 283
 a0(r92): [3..4]
 a1(r90): [200..202] [5..7]
 a2(r133): [28..29]
 a3(r132): [34..35]
 a4(r131): [41..42]
 a5(r130): [53..58]
 a6(r129): [55..60]
 a7(r128): [57..62]
 a8(r89): [13..14]
 a9(r88): [15..16]
 a10(r87): [17..18]
 a11(r127): [19..20]
 a12(r126): [70..71]
 a13(r125): [76..79]
 a14(r124): [78..81]
 a15(r121): [88..119]
 a16(r120): [92..121]
 a17(r86): [94..123]
 a18(r85): [108..127]
 a19(r123): [110..111]
 a20(r122): [114..115]
 a21(r119): [124..125]
 a22(r118): [128..129]
 a23(r84): [134..135]
 a24(r117): [136..137]
 a25(r116): [142..143]
 a26(r115): [148..149]
 a27(r114): [154..163]
 a28(r113): [156..165]
 a29(r112): [158..167]
 a30(r111): [160..169]
 a31(r110): [162..171]
 a32(r83): [176..177]
 a33(r109): [178..179]
 a34(r108): [184..185]
 a35(r107): [190..191]
 a36(r106): [196..197]
 a37(r105): [210..211]
 a38(r104): [216..221]
 a39(r91): [218..223]
 a40(r103): [228..237]
 a41(r102): [230..239]
 a42(r101): [242..243]
 a43(r100): [244..245]
 a44(r99): [248..249]
 a45(r98): [250..251]
 a46(r97): [254..255]
 a47(r96 [0]): [258..259]
 a47(r96 [1]): [258..259]
 a48(r95 [0]): [260..261]
 a48(r95 [1]): [260..261]
 a49(r82): [266..267]
 a50(r94): [272..273]
 a51(r93): [276..277]
Compressing live ranges: from 286 to 80 - 27%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r90): [52..53] [2..3]
 a2(r133): [12..13]
 a3(r132): [14..15]
 a4(r131): [16..17]
 a5(r130): [18..19]
 a6(r129): [18..19]
 a7(r128): [18..19]
 a8(r89): [4..5]
 a9(r88): [6..7]
 a10(r87): [8..9]
 a11(r127): [10..11]
 a12(r126): [20..21]
 a13(r125): [22..23]
 a14(r124): [22..23]
 a15(r121): [24..27]
 a16(r120): [24..27]
 a17(r86): [24..27]
 a18(r85): [24..29]
 a19(r123): [24..25]
 a20(r122): [26..27]
 a21(r119): [28..29]
 a22(r118): [30..31]
 a23(r84): [32..33]
 a24(r117): [34..35]
 a25(r116): [36..37]
 a26(r115): [38..39]
 a27(r114): [40..41]
 a28(r113): [40..41]
 a29(r112): [40..41]
 a30(r111): [40..41]
 a31(r110): [40..41]
 a32(r83): [42..43]
 a33(r109): [44..45]
 a34(r108): [46..47]
 a35(r107): [48..49]
 a36(r106): [50..51]
 a37(r105): [54..55]
 a38(r104): [56..57]
 a39(r91): [56..57]
 a40(r103): [58..59]
 a41(r102): [58..59]
 a42(r101): [60..61]
 a43(r100): [62..63]
 a44(r99): [64..65]
 a45(r98): [66..67]
 a46(r97): [68..69]
 a47(r96 [0]): [70..71]
 a47(r96 [1]): [70..71]
 a48(r95 [0]): [72..73]
 a48(r95 [1]): [72..73]
 a49(r82): [74..75]
 a50(r94): [76..77]
 a51(r93): [78..79]
  pref0:a2(r133)<-hr0@1500
  pref1:a3(r132)<-hr5@1500
  pref2:a4(r131)<-hr5@1500
  pref3:a5(r130)<-hr5@1500
  pref4:a6(r129)<-hr4@1500
  pref5:a7(r128)<-hr1@1500
  pref6:a12(r126)<-hr5@1500
  pref7:a13(r125)<-hr5@1500
  pref8:a14(r124)<-hr4@1500
  pref9:a15(r121)<-hr5@1500
  pref10:a16(r120)<-hr1@1500
  pref11:a25(r116)<-hr0@1500
  pref12:a26(r115)<-hr5@1500
  pref13:a27(r114)<-hr5@1500
  pref14:a28(r113)<-hr4@1500
  pref15:a29(r112)<-hr1@1500
  pref16:a30(r111)<-hr2@1500
  pref17:a34(r108)<-hr0@1500
  pref18:a35(r107)<-hr5@1500
  pref19:a36(r106)<-hr5@1500
  pref20:a37(r105)<-hr0@1500
  pref21:a38(r104)<-hr5@1500
  pref22:a40(r103)<-hr5@1500
  pref23:a41(r102)<-hr4@1500
  pref24:a48(r95)<-hr0@1500
  pref25:a50(r94)<-hr5@1500
  pref26:a51(r93)<-hr0@1500
  pref27:a0(r92)<-hr0@1500
  pref28:a39(r91)<-hr0@1500
  pref29:a17(r86)<-hr2@1500
  pref30:a49(r82)<-hr0@1500
  regions=1, blocks=12, points=80
    allocnos=52 (big 2), copies=0, conflicts=0, ranges=55
Disposition:
   49:r82  l0     0   32:r83  l0     0   23:r84  l0     0   18:r85  l0     4
   17:r86  l0     2   10:r87  l0     0    9:r88  l0     0    8:r89  l0     0
    1:r90  l0     0   39:r91  l0     2    0:r92  l0     0   51:r93  l0     0
   50:r94  l0     0   48:r95  l0     0   47:r96  l0     0   46:r97  l0     0
   45:r98  l0     0   44:r99  l0     0   43:r100 l0     0   42:r101 l0     0
   41:r102 l0     4   40:r103 l0     0   38:r104 l0     0   37:r105 l0     0
   36:r106 l0     0   35:r107 l0     0   34:r108 l0     0   33:r109 l0     0
   31:r110 l0     5   30:r111 l0     2   29:r112 l0     1   28:r113 l0     4
   27:r114 l0     0   26:r115 l0     0   25:r116 l0     0   24:r117 l0     0
   22:r118 l0     0   21:r119 l0     0   16:r120 l0     1   15:r121 l0     0
   20:r122 l0     5   19:r123 l0     5   14:r124 l0     1   13:r125 l0     0
   12:r126 l0     0   11:r127 l0     0    7:r128 l0     1    6:r129 l0     2
    5:r130 l0     0    4:r131 l0     0    3:r132 l0     0    2:r133 l0     0
+++Costs: overall -25000, reg -25000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={17d,10u} r1={22d,6u} r2={19d,3u} r4={23d,7u} r5={31d,15u} r6={1d,11u} r7={10d,43u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r16={1d,10u} r17={23d,3u} r18={15d} r19={1d,60u} r20={16d} r21={16d} r22={16d} r23={16d} r24={16d} r25={16d} r26={16d} r27={16d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={19d,3u} r37={17d,1u} r38={15d} r39={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={2d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} 
;;    total ref usage 1354{1130d,224u,0e} in 138{123 regular + 15 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 91 93 94 95 96 97 98 99 100 101 102 103 104 105
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":22:9 66 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":22:9 66 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_connect") [flags 0x41]  <function_decl 0x7f3c633e8c00 xcb_connect>) [0 xcb_connect S1 A8])
            (const_int 0 [0]))) "main.c":22:9 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 8 7 9 2 (set (reg:DI 93)
        (reg:DI 0 ax)) "main.c":22:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])
        (reg:DI 93)) "main.c":22:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":24:37 66 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":24:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_get_setup") [flags 0x41]  <function_decl 0x7f3c633e8600 xcb_get_setup>) [0 xcb_get_setup S1 A8])
            (const_int 0 [0]))) "main.c":24:37 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 82 [ _1 ])
        (reg:DI 0 ax)) "main.c":24:37 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "main.c":24:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn 15 14 16 2 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_setup_roots_iterator") [flags 0x41]  <function_decl 0x7f3c63330100 xcb_setup_roots_iterator>) [0 xcb_setup_roots_iterator S1 A8])
            (const_int 0 [0]))) "main.c":24:12 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:TI 95)
        (reg:TI 0 ax)) "main.c":24:12 65 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg:TI 96)
        (reg:TI 95)) "main.c":24:12 65 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 95)
        (nil)))
(insn 18 17 19 2 (set (mem/c:TI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [1 iter+0 S16 A64])
        (reg:TI 96)) "main.c":24:12 65 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 96)
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 iter.data+0 S8 A64])) "main.c":25:12 66 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 screen+0 S8 A64])
        (reg/f:DI 97)) "main.c":25:12 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 screen+0 S8 A64])) "main.c":27:14 66 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 99)
        (mem:SI (reg/f:DI 98) [3 screen_18->root+0 S4 A32])) "main.c":27:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 drawable+0 S4 A32])
        (reg:SI 99)) "main.c":27:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 screen+0 S8 A64])) "main.c":29:14 66 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 101)
        (mem:SI (plus:DI (reg/f:DI 100)
                (const_int 4 [0x4])) [3 screen_18->default_colormap+0 S4 A32])) "main.c":29:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (nil)))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 colormap+0 S4 A32])
        (reg:SI 101)) "main.c":29:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 27 26 28 2 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 colormap+0 S4 A32])) "main.c":30:18 67 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":30:18 66 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 36 r8)
        (const_int 0 [0])) "main.c":30:18 67 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 2 cx)
        (const_int 65535 [0xffff])) "main.c":30:18 67 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 1 dx)
        (const_int 65535 [0xffff])) "main.c":30:18 67 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SI 4 si)
        (reg:SI 102)) "main.c":30:18 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (reg:DI 103)) "main.c":30:18 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 34 33 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_alloc_color") [flags 0x41]  <function_decl 0x7f3c633abc00 xcb_alloc_color>) [0 xcb_alloc_color S1 A8])
            (const_int 0 [0]))) "main.c":30:18 754 {*call_value}
     (expr_list:REG_DEAD (reg:SI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (nil)))))))
(insn 35 34 36 2 (set (reg:SI 91 [ D.8762 ])
        (reg:SI 0 ax)) "main.c":30:18 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 36 35 37 2 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":30:18 66 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "main.c":30:18 66 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:SI 4 si)
        (reg:SI 91 [ D.8762 ])) "main.c":30:18 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.8762 ])
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (reg:DI 104)) "main.c":30:18 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 40 39 41 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_alloc_color_reply") [flags 0x41]  <function_decl 0x7f3c633abe00 xcb_alloc_color_reply>) [0 xcb_alloc_color_reply S1 A8])
            (const_int 0 [0]))) "main.c":30:18 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 41 40 42 2 (set (reg:DI 105)
        (reg:DI 0 ax)) "main.c":30:18 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 42 41 43 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [7 color_info+0 S8 A64])
        (reg:DI 105)) "main.c":30:18 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 43 42 44 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [7 color_info+0 S8 A64])
            (const_int 0 [0]))) "main.c":32:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 44 43 45 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "main.c":32:8 736 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 90
(note 45 44 46 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 166 3 (set (reg:SI 90 [ _9 ])
        (const_int 0 [0])) "main.c":33:16 67 {*movsi_internal}
     (nil))
(jump_insn 166 46 167 3 (set (pc)
        (label_ref 157)) "main.c":33:16 737 {jump}
     (nil)
 -> 157)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90

(barrier 167 166 49)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 86 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126
(code_label 49 167 50 4 2 (nil) [1 uses])
(note 50 49 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 4 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [7 color_info+0 S8 A64])) "main.c":34:5 66 {*movdi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (reg:DI 106)) "main.c":34:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 53 52 54 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c635aaa00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "main.c":34:5 743 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 4 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":36:16 66 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (reg:DI 107)) "main.c":36:16 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 56 55 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_generate_id") [flags 0x41]  <function_decl 0x7f3c633e8e00 xcb_generate_id>) [0 xcb_generate_id S1 A8])
            (const_int 0 [0]))) "main.c":36:16 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 4 (set (reg:SI 108)
        (reg:SI 0 ax)) "main.c":36:16 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 58 57 59 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 gcontext+0 S4 A32])
        (reg:SI 108)) "main.c":36:16 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 59 58 60 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 mask+0 S4 A32])
        (const_int 65540 [0x10004])) "main.c":37:10 67 {*movsi_internal}
     (nil))
(insn 60 59 61 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [7 color_info+0 S8 A64])) "main.c":38:26 66 {*movdi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:SI 83 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 16 [0x10])) [3 color_info_23->pixel+0 S4 A32])) "main.c":38:26 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 62 61 63 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 value[0]+0 S4 A32])
        (reg:SI 83 [ _2 ])) "main.c":38:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(insn 63 62 64 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 value[1]+0 S4 A32])
        (const_int 0 [0])) "main.c":39:14 67 {*movsi_internal}
     (nil))
(insn 64 63 65 4 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -76 [0xffffffffffffffb4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":40:5 186 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 65 64 66 4 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 mask+0 S4 A32])) "main.c":40:5 67 {*movsi_internal}
     (nil))
(insn 66 65 67 4 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 drawable+0 S4 A32])) "main.c":40:5 67 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 gcontext+0 S4 A32])) "main.c":40:5 67 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":40:5 66 {*movdi_internal}
     (nil))
(insn 69 68 70 4 (set (reg:DI 36 r8)
        (reg:DI 110)) "main.c":40:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 70 69 71 4 (set (reg:SI 2 cx)
        (reg:SI 111)) "main.c":40:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 71 70 72 4 (set (reg:SI 1 dx)
        (reg:SI 112)) "main.c":40:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 72 71 73 4 (set (reg:SI 4 si)
        (reg:SI 113)) "main.c":40:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 73 72 74 4 (set (reg:DI 5 di)
        (reg:DI 114)) "main.c":40:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(call_insn 74 73 75 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_create_gc") [flags 0x41]  <function_decl 0x7f3c6337a100 xcb_create_gc>) [0 xcb_create_gc S1 A8])
            (const_int 0 [0]))) "main.c":40:5 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 75 74 76 4 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":42:16 66 {*movdi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:DI 5 di)
        (reg:DI 115)) "main.c":42:16 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 77 76 78 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_generate_id") [flags 0x41]  <function_decl 0x7f3c633e8e00 xcb_generate_id>) [0 xcb_generate_id S1 A8])
            (const_int 0 [0]))) "main.c":42:16 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 4 (set (reg:SI 116)
        (reg:SI 0 ax)) "main.c":42:16 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 79 78 80 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 drawable+0 S4 A32])
        (reg:SI 116)) "main.c":42:16 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 80 79 81 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 mask+0 S4 A32])
        (const_int 2050 [0x802])) "main.c":44:10 67 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 screen+0 S8 A64])) "main.c":45:22 66 {*movdi_internal}
     (nil))
(insn 82 81 83 4 (set (reg:SI 84 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 117)
                (const_int 12 [0xc])) [3 screen_18->black_pixel+0 S4 A32])) "main.c":45:22 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(insn 83 82 84 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [3 value[0]+0 S4 A32])
        (reg:SI 84 [ _3 ])) "main.c":45:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(insn 84 83 85 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 value[1]+0 S4 A32])
        (const_int 32768 [0x8000])) "main.c":46:14 67 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 screen+0 S8 A64])) "main.c":48:5 66 {*movdi_internal}
     (nil))
(insn 86 85 87 4 (set (reg:SI 85 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 118)
                (const_int 32 [0x20])) [3 screen_18->root_visual+0 S4 A32])) "main.c":48:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))
(insn 87 86 88 4 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 screen+0 S8 A64])) "main.c":48:5 66 {*movdi_internal}
     (nil))
(insn 88 87 89 4 (set (reg:SI 86 [ _5 ])
        (mem:SI (reg/f:DI 119) [3 screen_18->root+0 S4 A32])) "main.c":48:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
(insn 89 88 90 4 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 drawable+0 S4 A32])) "main.c":48:5 67 {*movsi_internal}
     (nil))
(insn 90 89 91 4 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":48:5 66 {*movdi_internal}
     (nil))
(insn 91 90 92 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:5 186 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 92 91 93 4 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -76 [0xffffffffffffffb4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:5 186 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 93 92 94 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (reg:DI 122)) "main.c":48:5 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 122)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 94 93 95 4 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 mask+0 S4 A32])) "main.c":48:5 67 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 123)) "main.c":48:5 46 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 96 95 97 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 85 [ _4 ])) "main.c":48:5 46 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 85 [ _4 ])
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 97 96 98 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 1 [0x1])) "main.c":48:5 46 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 98 97 99 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 10 [0xa])) "main.c":48:5 46 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 99 98 100 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 150 [0x96])) "main.c":48:5 46 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 100 99 101 4 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 150 [0x96])) "main.c":48:5 46 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 101 100 102 4 (set (reg:SI 37 r9)
        (const_int 0 [0])) "main.c":48:5 67 {*movsi_internal}
     (nil))
(insn 102 101 103 4 (set (reg:SI 36 r8)
        (const_int 0 [0])) "main.c":48:5 67 {*movsi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:SI 2 cx)
        (reg:SI 86 [ _5 ])) "main.c":48:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(insn 104 103 105 4 (set (reg:SI 1 dx)
        (reg:SI 120)) "main.c":48:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(insn 105 104 106 4 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":48:5 67 {*movsi_internal}
     (nil))
(insn 106 105 107 4 (set (reg:DI 5 di)
        (reg:DI 121)) "main.c":48:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(call_insn 107 106 108 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_create_window") [flags 0x41]  <function_decl 0x7f3c63330b00 xcb_create_window>) [0 xcb_create_window S1 A8])
            (const_int 64 [0x40]))) "main.c":48:5 754 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:SI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 108 107 109 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":48:5 186 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 109 108 110 4 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 drawable+0 S4 A32])) "main.c":59:5 67 {*movsi_internal}
     (nil))
(insn 110 109 111 4 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":59:5 66 {*movdi_internal}
     (nil))
(insn 111 110 112 4 (set (reg:SI 4 si)
        (reg:SI 124)) "main.c":59:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 112 111 113 4 (set (reg:DI 5 di)
        (reg:DI 125)) "main.c":59:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(call_insn 113 112 114 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_map_window") [flags 0x41]  <function_decl 0x7f3c6333c400 xcb_map_window>) [0 xcb_map_window S1 A8])
            (const_int 0 [0]))) "main.c":59:5 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 114 113 115 4 (set (reg:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":61:5 66 {*movdi_internal}
     (nil))
(insn 115 114 116 4 (set (reg:DI 5 di)
        (reg:DI 126)) "main.c":61:5 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(call_insn 116 115 168 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_flush") [flags 0x41]  <function_decl 0x7f3c633e2700 xcb_flush>) [0 xcb_flush S1 A8])
            (const_int 0 [0]))) "main.c":61:5 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 168 116 169 4 (set (pc)
        (label_ref 143)) "main.c":63:11 737 {jump}
     (nil)
 -> 143)
;;  succ:       8 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 169 168 150)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       8
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 87 88 89 127
(code_label 150 169 119 5 7 (nil) [1 uses])
(note 119 150 120 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 5 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [8 e+0 S8 A64])) "main.c":65:18 66 {*movdi_internal}
     (nil))
(insn 121 120 122 5 (set (reg:QI 87 [ _6 ])
        (mem:QI (reg/f:DI 127) [0 e_40->response_type+0 S1 A32])) "main.c":65:18 69 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (nil)))
(insn 122 121 123 5 (set (reg:SI 88 [ _7 ])
        (zero_extend:SI (reg:QI 87 [ _6 ]))) "main.c":65:18 119 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 87 [ _6 ])
        (nil)))
(insn 123 122 124 5 (parallel [
            (set (reg:SI 89 [ _8 ])
                (and:SI (reg:SI 88 [ _7 ])
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":65:34 456 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 12 [0xc]))) "main.c":65:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (nil)))
(jump_insn 125 124 126 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 173)
            (pc))) "main.c":65:9 736 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 173)
;;  succ:       11
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 11, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 128 129 130
(note 126 125 127 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 6 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 gcontext+0 S4 A32])) "main.c":69:13 67 {*movsi_internal}
     (nil))
(insn 128 127 129 6 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 drawable+0 S4 A32])) "main.c":69:13 67 {*movsi_internal}
     (nil))
(insn 129 128 130 6 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":69:13 66 {*movdi_internal}
     (nil))
(insn 130 129 131 6 (set (reg:SI 1 dx)
        (reg:SI 128)) "main.c":69:13 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 131 130 132 6 (set (reg:SI 4 si)
        (reg:SI 129)) "main.c":69:13 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 132 131 133 6 (set (reg:DI 5 di)
        (reg:DI 130)) "main.c":69:13 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 133 132 170 6 (call (mem:QI (symbol_ref:DI ("draw_screen") [flags 0x41]  <function_decl 0x7f3c63456200 draw_screen>) [0 draw_screen S1 A8])
        (const_int 0 [0])) "main.c":69:13 743 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(jump_insn 170 133 171 6 (set (pc)
        (label_ref 138)) "main.c":70:13 737 {jump}
     (nil)
 -> 138)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 171 170 173)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       5
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 173 171 172 11 9 (nil) [1 uses])
(note 172 173 174 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 174 172 138 11 (const_int 0 [0]) "main.c":76:13 773 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 11, next block 8, flags: (RTL)
;;  pred:       11 [always]  (FALLTHRU)
;;              6 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 131
(code_label 138 174 139 7 6 (nil) [1 uses])
(note 139 138 140 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 7 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [8 e+0 S8 A64])) "main.c":80:9 66 {*movdi_internal}
     (nil))
(insn 141 140 142 7 (set (reg:DI 5 di)
        (reg:DI 131)) "main.c":80:9 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(call_insn 142 141 143 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c635aaa00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "main.c":80:9 743 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              4 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 132 133
(code_label 143 142 144 8 4 (nil) [1 uses])
(note 144 143 145 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 8 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 c+0 S8 A64])) "main.c":63:17 66 {*movdi_internal}
     (nil))
(insn 146 145 147 8 (set (reg:DI 5 di)
        (reg:DI 132)) "main.c":63:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(call_insn 147 146 148 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xcb_wait_for_event") [flags 0x41]  <function_decl 0x7f3c633e2a00 xcb_wait_for_event>) [0 xcb_wait_for_event S1 A8])
            (const_int 0 [0]))) "main.c":63:17 754 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 148 147 149 8 (set (reg:DI 133)
        (reg:DI 0 ax)) "main.c":63:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 149 148 151 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [8 e+0 S8 A64])
        (reg:DI 133)) "main.c":63:17 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(insn 151 149 152 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])) [8 e+0 S8 A64])
            (const_int 0 [0]))) "main.c":63:11 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 152 151 153 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "main.c":63:11 736 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 150)
;;  succ:       5
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 90
(note 153 152 154 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 157 9 (set (reg:SI 90 [ _9 ])
        (const_int 0 [0])) "main.c":85:12 67 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;;              3 [always] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90
;; lr  def 	 0 [ax] 92
(code_label 157 154 158 10 8 (nil) [1 uses])
(note 158 157 159 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 163 10 (set (reg:SI 92 [ <retval> ])
        (reg:SI 90 [ _9 ])) "main.c":86:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _9 ])
        (nil)))
(insn 163 159 164 10 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) "main.c":86:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 164 163 0 10 (use (reg/i:SI 0 ax)) "main.c":86:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

